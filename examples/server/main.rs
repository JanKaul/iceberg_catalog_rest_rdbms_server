//! Main binary entry point for openapi_client implementation.

#![allow(missing_docs)]

use clap::Parser;

mod server;

#[derive(Parser, Debug)]
#[command(author, version, about, long_about = None)]
struct Args {
    /// Host
    #[arg(long)]
    host: Option<String>,
    /// Port
    #[arg(short, long)]
    port: Option<String>,
    /// Https flag
    #[arg(long)]
    https: bool,
}

/// Create custom server, wire it to the autogenerated router,
/// and pass it to the web server.
#[tokio::main]
async fn main() {
    env_logger::init();

    let args = Args::parse();

    let host = args.host.unwrap_or_else(|| "0.0.0.0".to_owned());

    let port = args.port.unwrap_or_else(|| "8080".to_owned());

    let addr = host + ":" + &port;

    server::create(&addr, args.https).await;
}
